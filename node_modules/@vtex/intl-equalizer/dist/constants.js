'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MESSAGES = exports.ERRORS = undefined;

var _safe = require('colors/safe');

var _safe2 = _interopRequireDefault(_safe);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ERRORS = exports.ERRORS = {
  ERROR_NO_LOCALE_FILES: 'ERROR_NO_LOCALE_FILES',
  ERROR_NO_LOCALE_FOLDER: 'ERROR_NO_LOCALE_FOLDER',
  ERROR_NO_KEYS_LOCALE: 'ERROR_NO_KEYS_LOCALE'
};

const MESSAGES = exports.MESSAGES = {
  COULD_NOT_WRITE_JSON: locale => _safe2.default.red(`❌ Error: Could not write keys to ${locale}.json.`),
  NO_LOCALE_FILES: pathName => _safe2.default.red(`❌ Error: There are no locale files in "${pathName}. \n Only base locales are considered. (i.e. LOCALE.json)`),
  NO_LOCALE_FOLDER: pathName => _safe2.default.red(`❌ Error: There are no locale files folder in "${pathName}.`),
  ERROR_NO_KEYS_LOCALE: locale => _safe2.default.red(`❌ Error: Locale ${locale} is empty. Add some keys or delete it.`),
  ERROR_COULD_NOT_FIX: ({
    referenceLocale,
    locale,
    referenceLocaleLength,
    localeLength
  }) => _safe2.default.red(`❌ Error: Couldn't fix locale ${locale.toUpperCase()} due to differences on locale size. \n ${referenceLocale.toUpperCase()} has ${referenceLocaleLength} keys. Although, ${locale.toUpperCase()} has ${localeLength} keys.`),
  WRITING_LOCALE: locale => _safe2.default.yellow(`✏️  Writing sorted keys to ${locale}.json`),
  SUCCESS: _safe2.default.yellow('✨ All keys are perfectly localized!'),
  SUCCESS_FIX: _safe2.default.yellow('✨ Finished fixing keys!')
};